1方法的作用
2参数问题
3原有数组是否发生改变
4方法的返回值


1.pop :
   1.删除数组的最后一项;
   2.不需要传参数
   3.原有数组发生变化
   4.方法的返回值是删除那的一项；
2.push :
   1.给数组末尾添加一项
   2.添加最后一项的值,添加多项，参数用逗号隔开
   3.原有数组发生变化
   4.新增数组的length属性值
3.shift
   1. 删除数组的第一项
   2.不需要传入参数
   3.原有数组的发生变化
   4.返回值是删除数组第一项值
4. unshift
   1.给数组的开头新增一项
   2.需要传入新增的那一项
   3.原有数组发生变化
   4.新增一项之后数组成员个数
5.slice(m,n)
   1.数组的截取
   2.参数：  两个参数：(m<n)从索引m开始截取到索引n,不包含n;(m>n),返回空数组；
            一个参数slice(m): 从索引m截取到数组的末尾
            没有参数，克隆或者复制一次数组
   3.原有数组不发生改变
   4.截取的数组结果
6.splice
   1.两个参数： 从索引m开始，截取n项（返回值）;原有数组删除n项
       1.splice(m,n)
       三个参数: 替换 从索引m开始，删除x项，用n替换
       2.splice(m,x,n)
       3.splice(m,0,n) : 新增一项
   3.原有数组发生改变
   4.删除那几项以数组形式返回；
7.reverse
   1. 让数组倒过来排序
   2. 不需要参数
   3. 原有数组发生改变
   4. 倒过来排序的数组
8.sort
   1. 只能排10以内数字
   2. 参数：可以处理数组10以上的排序
           ary.sort(function (a, b) {return a - b;})从小到大
           ary.sort(function (a, b) {return b - a;})从大到小
   3.原有数组发生改变
   4.排序好的数组
9.join
   1.按照特定的字符把数组每一项连接起来，并以字符串形式返回
   2.需要参数（特定字符）
   3.原有数组不变
   4.字符串的结果
10.concat
   1.克隆数组
   2.参数： 没有参数： 相当于复制
           有参数： 数组或用逗号隔开
               把参数克隆一份放进原有的数组中
   3.原有数组不变
   4.得到一个新的数组
11.indexOf
   1.检测当前数组项第一次出现的索引位置
   2.要检测的那一项
   3.原有数组不变
   4.返回第一次出现的索引（如果不存在返回-1）
12.lastIndexOf
   1.检测当前数组项最后一次出现的索引位置
   2.要检测的那一项
   3.原有数组不变
   4.返回最后一次出现的索引（如果不存在返回-1）
13.forEach/map
   1.遍历循环数组
   2.需要参数
   3.原有不变
   4.forEach没有返回值，map有返回值（数组）

